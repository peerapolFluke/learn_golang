package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"seamoor"
	"seamoor/cors/auth"
	"seamoor/ent"
	"seamoor/services"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input *seamoor.CreateUserInput) (*ent.User, error) {
	return services.CreateUser(ctx, input)
}

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, input *seamoor.LoginInput) (*seamoor.Credential, error) {
	return services.Login(ctx, input)
}

// Profile is the resolver for the profile field.
func (r *queryResolver) Profile(ctx context.Context) (*ent.User, error) {
	currentUser := auth.ForContext(ctx)
	return services.GetUserById(ctx, currentUser.ID)
}

// Mutation returns seamoor.MutationResolver implementation.
func (r *Resolver) Mutation() seamoor.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
